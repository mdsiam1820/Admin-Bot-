const fs = require('fs');
const path = require('path');
const axios = require('axios');

module.exports.config = {
    name: "owner1",
    version: "2.0.0",
    hasPermssion: 0,
    credits: "SIAM",
    description: "Bot Owner Information",
    commandCategory: "system",
    usages: "/owner",
    cooldowns: 5,
    dependencies: {}
};

module.exports.run = async function({ api, event }) {
    // ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ /owner ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶¶‡ßá‡¶¨‡ßá
    if (event.body.trim() !== "/owner") return;

    try {
        // ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø
        const ownerInfo = {
            name: "üëë ùêÄùêùùê¶ùê¢ùêß ‚Ä¢ ùêÅùê®ùê¨ùê¨ ùêíùê¢ùêöùê¶ ‚ò¢Ô∏è",
            fbLink: "https://www.facebook.com/profile.php?id=100087227243000",
            uid: "100087227243000",
            messenger: "m.me/100087227243000",
            email: "siamahmedofficial@gmail.com"
        };

        // ‡¶á‡¶Æ‡ßá‡¶ú ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (‡¶¨‡¶ø‡¶ï‡¶≤‡ßç‡¶™ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï‡¶∏‡¶π)
        const imageUrls = [
            "https://i.ibb.co/9mwXdgyG/Picsart-25-02-15-07-13-07-933.jpg",
            "https://example.com/backup-image.jpg" // ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶á‡¶Æ‡ßá‡¶ú
        ];
        
        let imgPath;
        for (const url of imageUrls) {
            try {
                const cacheDir = path.join(__dirname, 'cache');
                if (!fs.existsSync(cacheDir)) {
                    fs.mkdirSync(cacheDir, { recursive: true });
                }
                
                imgPath = path.join(cacheDir, 'owner_img.jpg');
                const response = await axios.get(url, { responseType: 'arraybuffer' });
                fs.writeFileSync(imgPath, response.data);
                break; // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶∏‡¶´‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°‡ßá ‡¶≤‡ßÅ‡¶™ ‡¶•‡¶æ‡¶Æ‡¶¨‡ßá
            } catch (e) {
                console.log(`Failed to download image from ${url}`);
            }
        }

        // ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
        const replyMsg = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚óà‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
‚îÇ ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢ùó•ùó†ùóîùóßùóúùó¢ùó°
‚îÇ
‚îÇ‚ùè ùó°ùóÆùó∫ùó≤: ${ownerInfo.name}
‚îÇ‚ùè ùóôùóÆùó∞ùó≤ùóØùóºùóºùó∏: ${ownerInfo.fbLink}
‚îÇ‚ùè ùó®ùóúùóó: ${ownerInfo.uid}
‚îÇ‚ùè ùó†ùó≤ùòÄùòÄùó≤ùóªùó¥ùó≤ùóø: ${ownerInfo.messenger}
‚îÇ‚ùè ùóòùó∫ùóÆùó∂ùóπ: ${ownerInfo.email}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚óà‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ`;

        // ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã (‡¶á‡¶Æ‡ßá‡¶ú ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ö‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶∏‡¶π)
        if (fs.existsSync(imgPath)) {
            await api.sendMessage({ 
                body: replyMsg,
                attachment: fs.createReadStream(imgPath)
            }, event.threadID, () => {
                try { fs.unlinkSync(imgPath); } catch (e) {}
            }, event.messageID);
        } else {
            await api.sendMessage(replyMsg, event.threadID, event.messageID);
        }

    } catch (error) {
        console.error("Owner command error:", error);
        await api.sendMessage("‚ö†Ô∏è ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡ßá ‡¶∏‡¶æ‡¶Æ‡ßü‡¶ø‡¶ï ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®", event.threadID);
    }
};
