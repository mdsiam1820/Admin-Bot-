const fs = global.nodemodule["fs-extra"];
module.exports.config = {
  name: "ultimate-protect",
  version: "5.0.0",
  hasPermssion: 0,
  credits: "Developer",
  description: "рж╕ржорзНржкрзВрж░рзНржг ржПржбржорж┐ржи ржУ рж░рзЯрзНржпрж╛рж▓ ржкрзНрж░ржЯрзЗржХрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо",
  commandCategory: "noprefix",
  usages: "",
  cooldowns: 3,
};

module.exports.handleEvent = async function({ api, event }) {
  const { threadID, messageID, body } = event;
  
  // Complete Protection System
  const protectionSystem = {
    // Admin Protection (ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
    admin: {
      name: "рж╕рж┐ржпрж╝рж╛ржо (Siam)",
      title: "ЁЯСС рж╕рж░рзНржмрзЛржЪрзНржЪ ржПржбржорж┐ржи ржУ ржЧрзНрж░рзБржк ржорж╛рж▓рж┐ржХ ЁЯСС",
      emoji: "ЁЯЫбя╕П",
      responses: [
        "тЪая╕П рж╕рждрж░рзНржХрждрж╛! ржПржбржорж┐ржи рж╕рж┐ржпрж╝рж╛ржо рж╕рж╛рж╣рзЗржмржХрзЗ ржбрж╛ржХржмрзЗржи ржирж╛!",
        "тЫФ рж╕рж░рж╛рж╕рж░рж┐ ржПржбржорж┐ржиржХрзЗ ржбрж╛ржХрж╛ ржирж┐рж╖рзЗржз!",
        "ЁЯФ┤ ржирж╛ржоржЯрж┐ ржорзБржЫрзЗ ржлрзЗрж▓рзБржи! ржПржбржорж┐ржи ржЯрзНржпрж╛ржЧ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛!"
      ],
      patterns: [
        /(?:^|\s)(рж╕рж┐ржпрж╝рж╛ржо|siam)(?=\s|$)/i,
        /@(рж╕рж┐ржпрж╝рж╛ржо|siam)/i
      ],
      footer: "ЁЯУМ ржкрзНрж░рзЯрзЛржЬржирзЗ ржЗржиржмржХрзНрж╕рзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи"
    },
    
    // Royal Protection (ржирж╛ржлрж┐рж╕рж╛рж░ ржЬржирзНржп ржЖржкржбрзЗржЯрзЗржб ржорзЗрж╕рзЗржЬ)
    royal: {
      "nafisa": {
        emoji: "ЁЯС╕",
        title: "ржорж╣рж╛рж░рж╛ржирзА ржирж╛ржлрж┐рж╕рж╛ (рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржмржЙ)",
        responses: [
          "ЁЯМ╕ рж░рж╛ржирзА рж╕рж╛рж╣рзЗржмрж╛ржХрзЗ ржбрж╛ржХрж╛рж░ ржЖржЧрзЗ ржЕржирзБржорждрж┐ ржирж┐ржи!",
          "ЁЯТР ржирж╛ржлрж┐рж╕рж╛ ржжрзЗржмрзАрж░ ржирж╛ржо рж╕ржорзНржорж╛ржи рж╕рж╣ржХрж╛рж░рзЗ ржирж┐ржи!",
          "тЬи ржорж╣рж╛рж░рж╛ржирзАрж░ ржирж╛ржорзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░рзЛ ржирж╛!",
          "ЁЯСС рж╕рж┐ржпрж╝рж╛ржорзЗрж░ рж░рж╛ржирзАржХрзЗ ржбрж╛ржХрждрзЗ рж╕рж╛рж╣рж╕ ржХрж░ржЫрзЛ?",
          "ЁЯТЦ рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржкрзНрж░рж┐рзЯрждржорж╛ржХрзЗ ржПржнрж╛ржмрзЗ ржбрж╛ржХрж╛ ржЙржЪрж┐ржд ржирзЯ!",
          "тЪая╕П рж╕рждрж░рзНржХ! рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржмржЙржХрзЗ ржбрж╛ржХржЫрзЛ?",
          "ЁЯТЮ рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржЬрзАржмржирж╕ржЩрзНржЧрж┐ржирзАржХрзЗ рж╕ржорзНржорж╛ржи ржХрж░рзБржи",
          "ЁЯТШ рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ржХрзЗ ржбрж┐рж╕рзНржЯрж╛рж░рзНржм ржХрж░рзЛ ржирж╛"
        ],
        patterns: [
          /(?:^|\s)(ржирж╛ржлрж┐рж╕рж╛|nafisa)(?=\s|$)/i,
          /@(ржирж╛ржлрж┐рж╕рж╛|nafisa)/i,
          /(?:^|\s)(ржирж╛ржлрзАрж╕рж╛|nafisa)(?=\s|$)/i,
          /(?:^|\s)(рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржмржЙ|siamer bou)(?=\s|$)/i,
          /(?:^|\s)(рж╕рж┐ржпрж╝рж╛ржорзЗрж░ рж╕рзНрждрзНрж░рзА|siamer stri)(?=\s|$)/i
        ],
        footer: "тЭдя╕П рж╕ржорзНржорж╛ржи ржмржЬрж╛рзЯ рж░рж╛ржЦрзБржи | ЁЯСС рж╕рж┐ржпрж╝рж╛ржорзЗрж░ рж░рж╛ржирзА"
      }
    },

    // Question Answering (ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
    questions: [
      {
        pattern: /(ржПржбржорж┐ржи|admin|ржмрж╕|boss)(рзЗрж░|er)?\s*(ржирж╛ржо|name)\s*(ржХрж┐|what|who)/i,
        response: `ЁЯЫбя╕П ржПржбржорж┐ржи ржЗржиржлрзЛ:\n\n┬╗ ржирж╛ржо: рж╕рж┐ржпрж╝рж╛ржо (Siam)\n┬╗ ржкржж: рж╕рж░рзНржмрзЛржЪрзНржЪ ржПржбржорж┐ржи\nЁЯУМ ржирж┐рзЯржо: рж╕рж░рж╛рж╕рж░рж┐ ржбрж╛ржХрж╛ ржирж┐рж╖рзЗржз!`
      },
      {
        pattern: /(ржирж╛ржлрж┐рж╕рж╛|nafisa)(рзЗрж░|er)?\s*(ржмрж┐ржпрж╝рзЗ|bou|husband|рж╕рзНржмрж╛ржорзА)( ржХрзЗ| who)/i,
        response: `ЁЯТН ржмрж┐рзЯрзЗ рж╕ржВржХрзНрж░рж╛ржирзНржд рждржерзНржп:\n\n┬╗ ржирж╛ржлрж┐рж╕рж╛рж░ рж╕рзНржмрж╛ржорзА: рж╕рж┐ржпрж╝рж╛ржо (Siam)\n┬╗ рж╕ржорзНржкрж░рзНржХ: ржЬрзАржмржирж╕ржЩрзНржЧрзА\nЁЯТЦ рждрж╛рж░рж╛ ржкрж░рж╕рзНржкрж░рзЗрж░ ржЬржирзНржп рждрзИрж░рж┐!`
      }
    ]
  };

  // Check for questions first
  for (const q of protectionSystem.questions) {
    if (q.pattern.test(body)) {
      return api.sendMessage(q.response, threadID, messageID);
    }
  }

  // Check Admin Protection
  for (const pattern of protectionSystem.admin.patterns) {
    if (pattern.test(body)) {
      const randomResponse = protectionSystem.admin.responses[Math.floor(Math.random() * protectionSystem.admin.responses.length)];
      const adminMessage = `${protectionSystem.admin.emoji} ${protectionSystem.admin.title} ${protectionSystem.admin.emoji}\n\n${randomResponse}\n\n${protectionSystem.admin.footer}`;
      return api.sendMessage(adminMessage, threadID, messageID);
    }
  }

  // Check Royal Protection
  for (const name in protectionSystem.royal) {
    const royal = protectionSystem.royal[name];
    for (const pattern of royal.patterns) {
      if (pattern.test(body)) {
        const randomResponse = royal.responses[Math.floor(Math.random() * royal.responses.length)];
        const royalMessage = `${royal.emoji} ${royal.title} ${royal.emoji}\n\n${randomResponse}\n\n${royal.footer}`;
        return api.sendMessage(royalMessage, threadID, messageID);
      }
    }
  }
};

module.exports.run = function({ api, event, client, __GLOBAL }) { }
