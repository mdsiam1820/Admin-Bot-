const fs = global.nodemodule["fs-extra"];
module.exports.config = {
  name: "royal-protect-plus",
  version: "3.0.0",
  hasPermssion: 0,
  credits: "Developer",
  description: "Advanced Royal Protection System",
  commandCategory: "noprefix",
  usages: "",
  cooldowns: 3,
};

module.exports.handleEvent = async function({ api, event }) {
  const { threadID, messageID, body } = event;
  
  // Advanced Royal Protection System
  const royalProtection = {
    "siam": {
      emoji: "ЁЯСС",
      responses: [
        "ржУржЗ ржЫрзЛржЯрж▓рзЛржХ! рж░рж╛ржЬрж╛ рж╕рж┐ржпрж╝рж╛ржо рж╕рж╛рж╣рзЗржмржХрзЗ ржбрж╛ржЗрж░рзЗржХрзНржЯ ржбрж╛ржХ ржжрж┐ржмрзЗржи ржирж╛! ЁЯШд (ржирж┐рзЯржо ржХрж╛ржирзБржи ржорж╛ржирзЗржи!)",
        "тЪая╕П рж╕рж╛ржмржзрж╛ржи! рж░рж╛ржЬрж╛ рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржирж╛ржо ржирзЗржУрзЯрж╛ ржирж┐рж╖рзЗржз!",
        "тЫФ ржорж╣рж╛рж░рж╛ржЬрж╛ рж╕рж┐ржпрж╝рж╛ржорзЗрж░ ржирж╛ржо ржорзБржЦрзЗ ржирзЗржУрзЯрж╛рж░ рж╕рж╛рж╣рж╕? ЁЯШб"
      ],
      pattern: /(?:^|\s)siam(?=\s|$)/i
    },
    "рж╕рж┐ржпрж╝рж╛ржо": {
      emoji: "ЁЯд┤",
      responses: [
        "ржЖрж░рзЗ ржмрж╛ржк рж░рзЗ! ржЖржорж╛ржжрзЗрж░ ржорж╣рж╛рж░рж╛ржЬрж╛ рж╕рж┐ржпрж╝рж╛ржо рж╕рж╛рж╣рзЗржмржХрзЗ ржбрж╛ржХржЫрзЛ? ЁЯШ▒ (ржкржжрзНржоржлрзБрж▓ ржПржирзЗ ржХрзНрж╖ржорж╛ ржЪрж╛ржУ!)",
        "ЁЯЪи рж░рж╛ржЬржжрзНрж░рзЛрж╣! рж╕рж┐ржпрж╝рж╛ржо рж╕рж╛рж╣рзЗржмрзЗрж░ ржирж╛ржо ржирж┐рж╖рж┐ржжрзНржз!",
        "ЁЯФ┤ ржирж╛ржоржЯрж┐ ржорзБржЫрзЗ ржлрзЗрж▓рзБржи! ржирж╛рж╣рж▓рзЗ рж░рж╛ржЬржжрж░ржмрж╛рж░рзЗ ржбрж╛ржХрж╛ рж╣ржмрзЗ!"
      ],
      pattern: /(?:^|\s)рж╕рж┐ржпрж╝рж╛ржо(?=\s|$)/
    },
    "nafisa": {
      emoji: "ЁЯС╕",
      responses: [
        "ржЙржлрзНржл! рж░рж╛ржирзА ржирж╛ржлрж┐рж╕рж╛ рж╕рж╛рж╣рзЗржмрж╛ржХрзЗ ржбрж╛ржХрж╛рж░ рж╕рж╛рж╣рж╕? ЁЯШ│ (рждрзЛржорж╛рж░ рждрзЛ ржмрзЬ ржжрзБржГрж╕рж╛рж╣рж╕!)",
        "ЁЯТв рж░рж╛ржирзА ржирж╛ржлрж┐рж╕рж╛рж░ ржирж╛ржо ржорзБржЦрзЗ ржЖржирждрзЗ ржирж┐рж╖рзЗржз!",
        "тЪЬя╕П ржорж╣рж╛рж░рж╛ржирзАрж░ ржирж╛ржо ржирзЗржУрзЯрж╛рж░ ржЖржЧрзЗ ржЕржирзБржорждрж┐ ржирж┐ржи!"
      ],
      pattern: /(?:^|\s)nafisa(?=\s|$)/i
    },
    "ржирж╛ржлрж┐рж╕рж╛": {
      emoji: "ЁЯТН",
      responses: [
        "рж╢рзБржирзЛ рж╣рзЗ ржкрзНрж░ржЬрж╛! ржорж╣рж╛рж░рж╛ржирзА ржирж╛ржлрж┐рж╕рж╛ ржжрзЗржмрзАржХрзЗ ржбрж╛ржХрж╛рж░ ржЖржЧрзЗ рж░рж╛ржЬржжрж░ржмрж╛рж░ ржерзЗржХрзЗ ржкрж╛рж░ржорж┐рж╢ржи ржирж┐ржмрзЗржи! тЬи",
        "ЁЯМ╕ рж░рж╛ржирзА ржирж╛ржлрж┐рж╕рж╛рж░ ржирж╛ржо ржирж┐рж╖рж┐ржжрзНржз! рж╕ржорзНржорж╛ржи ржмржЬрж╛рзЯ рж░рж╛ржЦрзБржи!",
        "ЁЯСС ржорж╣рж╛рж░рж╛ржирзАрж░ ржирж╛ржо рж╕рж░рж╛рж╕рж░рж┐ ржбрж╛ржХрж╛ рж░рж╛ржЬржжрзНрж░рзЛрж╣рзЗрж░ рж╢рж╛ржорж┐рж▓!"
      ],
      pattern: /(?:^|\s)ржирж╛ржлрж┐рж╕рж╛(?=\s|$)/
    }
  };

  // Check message for protected names
  for (const name in royalProtection) {
    const { pattern, emoji, responses } = royalProtection[name];
    if (pattern.test(body)) {
      const randomResponse = responses[Math.floor(Math.random() * responses.length)];
      return api.sendMessage(`${emoji} ${randomResponse} ${emoji}`, threadID, messageID);
    }
  }
};

module.exports.run = function({ api, event, client, __GLOBAL }) { }
